const nodemailer = require('nodemailer');

const sendEmergencyEmail = async (to, { name, heartRate, oxygenLevel, bodyTemperature, sleepQuality, emotionalState, location }) => {
  try {
    // Validar parâmetros obrigatórios
    if (!to || !name || !heartRate || !location || !location.latitude || !location.longitude) {
      throw new Error('Parâmetros insuficientes para enviar o e-mail.');
    }

    // Configuração do transporte de e-mail
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    });

    // Conteúdo do e-mail atualizado com todos os campos
    const mailOptions = {
      from: `"Mind Harmony Alert" <${process.env.EMAIL_USER}>`,
      to,
      subject: '🚨 Alerta de Saúde: Situação Crítica Detectada',
      html: `
        <div style="font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 20px; border-radius: 10px;">
          <h1 style="color: #e74c3c; text-align: center;">🚨 Health Alert</h1>
          <p style="font-size: 18px; color: #333;">Dear ${name},</p>
          <p style="font-size: 16px; color: #555;">
            The user <strong>${name}</strong> presented critical conditions:
          </p>
          <ul style="font-size: 16px; color: #555; list-style-type: none; padding: 0;">
            <li>💓 <strong>Heart Rate:</strong> ${heartRate} BPM</li>
            <li>🌬️ <strong>Oxygen Saturation:</strong> ${oxygenLevel || 'N/A'}%</li>
            <li>🌡️ <strong>Body Temperature:</strong> ${bodyTemperature || 'N/A'} °C</li>
            <li>😴 <strong>Sleep Quality:</strong> ${sleepQuality || 'N/A'}</li>
            <li>🧠 <strong>Emotional State:</strong> ${emotionalState || 'N/A'}</li>
            <li>📍 <strong>Location:</strong> 
              <a href="https://www.google.com/maps?q=${location.latitude},${location.longitude}" 
                 style="color: #3498db; text-decoration: none;" target="_blank">
                View on Google Maps
              </a>
            </li>
          </ul>
          <div style="margin-top: 20px; text-align: center;">
            <iframe 
              width="600" 
              height="450" 
              style="border:0; border-radius: 10px;" 
              loading="lazy" 
              allowfullscreen 
              src="https://www.google.com/maps/embed/v1/place?key=${process.env.MAPS_API_KEY}&q=${location.latitude},${location.longitude}">
            </iframe>
          </div>
          <p style="font-size: 16px; color: #555; margin-top: 20px;">
            <em>Please take immediate actions to assist the user.</em>
          </p>
          <hr style="border: none; border-top: 1px solid #ddd; margin: 20px 0;">
          <footer style="text-align: center; font-size: 14px; color: #aaa;">
            This email was automatically generated by the health monitoring system.
          </footer>
        </div>
      `,
    };

    // Enviar o e-mail
    await transporter.sendMail(mailOptions);
    console.log('🚀 Emergency email sent successfully to:', to);
    return true;
  } catch (error) {
    console.error('❌ Error sending the email:', error.message);
    return false;
  }
};

module.exports = sendEmergencyEmail;
